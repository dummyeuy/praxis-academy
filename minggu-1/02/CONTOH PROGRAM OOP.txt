Source code class Main :

package oop;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        //var temporary
        int tempNoId = 0;
        String tempNama = "";
        String tempAlamat = "";
        int tempKodeBarang = 0;
        int tempHarga = 0;
        String tempNamaBarang = "";
        int tempKodeTransaksi = 0;
        int tempBanyak = 0;

        //Proses menerima masukan
        System.out.println("======================================================");
        System.out.println("               Input data penjualan                   ");
        System.out.println("======================================================");
        System.out.print("Id Pelanggan : ");
        tempNoId = sc.nextInt();
        
        tempNama = sc.nextLine();
        System.out.print("Nama Pelanggan : ");
        tempNama = sc.nextLine();

        System.out.print("Alamat Pelanggan : ");
        tempAlamat = sc.nextLine();
        
        System.out.print("\nKode Barang : ");
        tempKodeBarang = sc.nextInt();
        
        tempNamaBarang = sc.nextLine();
        System.out.print("Nama Barang : ");
        tempNamaBarang = sc.nextLine();

        System.out.print("Harga Barang : ");
        tempHarga = sc.nextInt();

        System.out.print("\nKode Transaksi : ");
        tempKodeTransaksi = sc.nextInt();

        System.out.print("Banyak Barang : ");
        tempBanyak = sc.nextInt();

        //eksekusi
        Transaksi t = new Transaksi(tempNoId, tempNama, tempAlamat);
        t.setBarang(tempKodeBarang, tempNamaBarang, tempHarga);
        t.setTransaksi(tempKodeTransaksi, tempBanyak);

        //output hasil masukan dan mengeluarkan total belanja
        t.cetakStruk();
    }

}


Source code class Transaksi :

package oop;

//Inheritance digunakan ketika parent memiliki atribut dan metode dan lalu semuanya diturunkan pada child. 
//Contoh : class Transaksi extends Costumer (Transaksi merupakan kelas child, Costumer merupakan kelas parent).
//contoh inheritance
public class Transaksi extends Customer implements Barang {

    private int kodeBarang;
    private String namaBarang;
    private float harga;

    private int kodeTransaksi;
    private int banyak;

    //konstruktor
    public Transaksi() {
    }

    //dari kelas parent
    public Transaksi(int noId, String nama, String alamat) {
        super(noId, nama, alamat);
    }

    public void setTransaksi(int kodeTransaksi, int banyak) {
        this.kodeTransaksi = kodeTransaksi;
        this.banyak = banyak;
    }

    //total transaksi = banyaknya barang * harga barang
    public float totalTransaksi() {
        return (banyak * harga);
    }

    //override class interface
    public void setBarang(int kodeBarang, String namaBarang, float harga) {
        this.kodeBarang = kodeBarang;
        this.namaBarang = namaBarang;
        this.harga = harga;
    }

    //output
    public void cetakStruk() {
        System.out.println("\n");
        System.out.println("=============================================================");
        System.out.println("                          Nota Pembelian                     ");
        System.out.println("=============================================================");
        System.out.println("ID Pembeli                  : " + super.getNoId());
        System.out.println("Nama Pembeli                : " + super.getNama());
        System.out.println("Alamat                      : " + super.getAlamat());

        System.out.println("Kode Barang                 : " + kodeBarang);
        System.out.println("Nama Barang                 : " + namaBarang);
        System.out.println("Harga                       : " + harga);

        System.out.println("Kode transaksi              : " + kodeTransaksi);
        System.out.println("Banyak                      : " + banyak);

        System.out.println("Total Transaksi             : " +"Rp. "+totalTransaksi());
        
        System.out.println("=============================================================");
        System.out.println("                          Terima kasih                       ");
        System.out.println("=============================================================");
    }

}


Source code class Barang :
package oop;

//Interface digunakan saat parent tidak memiliki apa-apa, hanya metode,
//namun metode tersebut harus di implementasikan[harus ada] pada kelas child.
//contoh class interface :

public interface Barang {
        //method interface
        public void setBarang(int kodeBarang, String namaBarang, float harga);
}


Source code class Customer :

package oop;

//contoh class objek :

public class Customer {

    private int noId;
    private String nama;
    private String alamat;

    //konstruktor
    public Customer() {
    }

    public Customer(int noId, String nama, String alamat) {
        this.noId = noId;
        this.nama = nama;
        this.alamat = alamat;
    }

    //proses get set
    public int getNoId() {
        return noId;
    }

    public void setNoId(int noId) {
        this.noId = noId;
    }

    public String getNama() {
        return nama;
    }

    public void setNama(String nama) {
        this.nama = nama;
    }

    public String getAlamat() {
        return alamat;
    }

    public void setAlamat(String alamat) {
        this.alamat = alamat;
    }
}